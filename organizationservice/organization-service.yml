
spring:
  jpa:
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    database: POSTGRESQL
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    platform: postgres
    testWhileIdle: true
    validationQuery: SELECT 1
  database:
    driverClassName: org.postgresql.Driver
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ostock
            client-authentication-method: client_secret_basic
            client-secret: o07Wo6swYDCyAsuJJ8AgjgZky2HaRRRS
            authorization-grant-type: authorization_code
            scope: openid, profile, email
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:7080/realms/spmia-realm
          jwk-set-uri: http://keycloak:7080/realms/spmia-realm/protocol/openid-connect/certs
  cloud:
    stream:
      bindings:
        outputBinding:
          destination: orgChangeTopic
      kafka:
        binder:
          brokers: kafka:9092
jwt:
  auth:
    converter:
      resource-id: ostock
      principle-attribute: preferred_username

management:
  endpoints:
    web:
      exposure:
        include: '*'
    enabled-by-default: true
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: 'http://eurekaserver:8070/eureka/'

server:
  port: 8074

#keycloak.realm = spmia-realm
#keycloak.server-url = http://host.docker.internal:8080/auth
#keycloak.ssl-required = external
#keycloak.resource = ostock
#keycloak.credentials.secret = Tw5yp3K8Rps0aKlU2f4gg188Qf1l3YGO
#keycloak.use-resource-role-mappings = true
#keycloak.bearer-only = true